#version 330 core
layout(location = 0) in vec3 a_position;
layout(location = 1) in vec3 a_color;
layout(location = 2) in vec3 a_normal;
out vec3 v_color;
out vec3 v_normal;

//necessary uniforms
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;

uniform vec3 lightDirection;
out vec3 v_lightDirection;
out vec3 v_view;

void main(){
    v_color = a_color;

    v_normal=vec3(viewMatrix*modelMatrix*vec4(a_normal, 0.0));
    v_lightDirection=vec3(viewMatrix * vec4(lightDirection, 0.0));
    v_view=vec3(modelMatrix*viewMatrix*vec4(a_position,1.0));

    gl_Position = projectionMatrix * viewMatrix  * modelMatrix*vec4(a_position,1.0);
}